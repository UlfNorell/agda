(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue1541a (Issue1541a.agda). " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : A ?1 : A ?2 : A → A ?3 : A ?4 : A ?5 : A ?6 : A ?7 : A → A " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5 6 7)))
(agda2-give-action 0 "λ section → section + x")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?1 : A ?2 : A → A ?3 : A ?4 : A ?5 : A ?6 : A ?7 : A → A _35 : A [ at 1,1-5 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A " nil)
((last . 1) . (agda2-goals-action '(1 2 3 4 5 6 7)))
(agda2-give-action 1 "λ section → x + section")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?2 : A → A ?3 : A ?4 : A ?5 : A ?6 : A ?7 : A → A _35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A " nil)
((last . 1) . (agda2-goals-action '(2 3 4 5 6 7)))
(agda2-give-action 2 "λ section → section + x")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?3 : A ?4 : A ?5 : A ?6 : A ?7 : A → A _35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A " nil)
((last . 1) . (agda2-goals-action '(3 4 5 6 7)))
(agda2-give-action 3 "λ z → z + x")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?4 : A ?5 : A ?6 : A ?7 : A → A _35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] _37 : A [ at 1,1-12 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A 1,1-12 (z : A) → A !=< A of type Set when checking that the expression λ z → z + x has type A " nil)
((last . 1) . (agda2-goals-action '(4 5 6 7)))
(agda2-give-action 4 "λ a b → b + x")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?5 : A ?6 : A ?7 : A → A _35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] _37 : A [ at 1,1-12 ] _38 : A [ at 1,1-14 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A 1,1-12 (z : A) → A !=< A of type Set when checking that the expression λ z → z + x has type A 1,1-14 (a : _39 x y) (b : A) → A !=< A of type Set when checking that the expression λ a b → b + x has type A " nil)
((last . 1) . (agda2-goals-action '(5 6 7)))
(agda2-give-action 5 "λ a → a + (a + x)")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?6 : A ?7 : A → A _35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] _37 : A [ at 1,1-12 ] _38 : A [ at 1,1-14 ] _39 : A [ at 1,1-18 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A 1,1-12 (z : A) → A !=< A of type Set when checking that the expression λ z → z + x has type A 1,1-14 (a : _39 x y) (b : A) → A !=< A of type Set when checking that the expression λ a b → b + x has type A 1,1-18 (a : A) → A !=< A of type Set when checking that the expression λ a → a + (a + x) has type A " nil)
((last . 1) . (agda2-goals-action '(6 7)))
(agda2-give-action 6 "λ a → x + (y + a)")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "?7 : A → A _35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] _37 : A [ at 1,1-12 ] _38 : A [ at 1,1-14 ] _39 : A [ at 1,1-18 ] _40 : A [ at 1,1-18 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A 1,1-12 (z : A) → A !=< A of type Set when checking that the expression λ z → z + x has type A 1,1-14 (a : _39 x y) (b : A) → A !=< A of type Set when checking that the expression λ a b → b + x has type A 1,1-18 (a : A) → A !=< A of type Set when checking that the expression λ a → a + (a + x) has type A 1,1-18 (a : A) → A !=< A of type Set when checking that the expression λ a → x + (y + a) has type A " nil)
((last . 1) . (agda2-goals-action '(7)))
(agda2-give-action 7 "λ a b → a + b")
(agda2-status-action "")
(agda2-info-action "*All Goals, Errors*" "_35 : A [ at 1,1-5 ] _36 : A [ at 1,1-5 ] _37 : A [ at 1,1-12 ] _38 : A [ at 1,1-14 ] _39 : A [ at 1,1-18 ] _40 : A [ at 1,1-18 ] _41 : A [ at 1,1-14 ] ———— Errors ———————————————————————————————————————————————— 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → section + x has type A 1,1-5 (section : A) → A !=< A of type Set when checking that the expression λ section → x + section has type A 1,1-12 (z : A) → A !=< A of type Set when checking that the expression λ z → z + x has type A 1,1-14 (a : _39 x y) (b : A) → A !=< A of type Set when checking that the expression λ a b → b + x has type A 1,1-18 (a : A) → A !=< A of type Set when checking that the expression λ a → a + (a + x) has type A 1,1-18 (a : A) → A !=< A of type Set when checking that the expression λ a → x + (y + a) has type A 1,5-14 (b : A) → A !=< A of type Set when checking that the expression λ b → a + b has type A " nil)
((last . 1) . (agda2-goals-action '()))
